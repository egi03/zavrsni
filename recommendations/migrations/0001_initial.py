# Generated by Django 5.1.6 on 2025-06-01 14:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('music', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HybridRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hybrid_score', models.FloatField()),
                ('collaborative_score', models.FloatField(default=0.0)),
                ('content_audio_score', models.FloatField(default=0.0)),
                ('content_mood_score', models.FloatField(default=0.0)),
                ('popularity_score', models.FloatField(default=0.0)),
                ('recency_score', models.FloatField(default=0.0)),
                ('diversity_score', models.FloatField(default=0.0)),
                ('strategy', models.CharField(default='default', max_length=50)),
                ('explanation', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hybrid_recommendations', to='music.playlist')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.song')),
            ],
            options={
                'verbose_name': 'Hybrid Recommendation',
                'verbose_name_plural': 'Hybrid Recommendations',
                'db_table': 'hybrid_recommendations',
                'ordering': ['-hybrid_score'],
                'indexes': [models.Index(fields=['playlist', 'strategy', 'hybrid_score'], name='hybrid_reco_playlis_d6faff_idx'), models.Index(fields=['updated_at'], name='hybrid_reco_updated_d5e69a_idx')],
                'unique_together': {('playlist', 'song', 'strategy')},
            },
        ),
        migrations.CreateModel(
            name='PlaylistRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('reason', models.CharField(default='collaborative_filtering', max_length=255)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='music.playlist')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.song')),
            ],
            options={
                'ordering': ['-score'],
                'indexes': [models.Index(fields=['playlist', 'score'], name='recommendat_playlis_8680c2_idx'), models.Index(fields=['song', 'score'], name='recommendat_song_id_4b9b73_idx')],
                'unique_together': {('playlist', 'song')},
            },
        ),
    ]
